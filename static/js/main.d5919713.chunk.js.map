{"version":3,"sources":["game/style.module.css","containers/App/style.module.css","game/modules/game/settingsConfig.ts","game/modules/game/storyConfig.ts","game/modules/game/circle/preload.ts","game/modules/scenes/assets/dialogs.ts","game/modules/scenes/assets/preloadData.ts","game/modules/scenes/modules/Player.ts","game/modules/scenes/modules/Dialog.ts","game/modules/scenes/modules/Extensions.ts","utils/createGuard.ts","game/modules/scenes/modules/Level.ts","game/modules/scenes/Default.ts","game/modules/service/config.ts","game/index.tsx","game/instance.ts","containers/App/index.tsx","index.js"],"names":["module","exports","settingsConfig","delta","width","height","y","buttons","margin","top","right","colors","names","text","triggerDebug","animation","ease","duration","storyConfig","tal","NAME","PORTRAIT","preloadData","data","forEach","unit","method","content","load","dialogs","portrait","name","replica","gameResourcesData","assets","Player","scene","cursors","playerBody","playerVisual","camera","playerParamsConfig","blockMove","left","blocked","time","coordinates","x","world","map","this","createPlayer","createCamera","createTeleport","playerBounce","playerData","getObjectLayer","objects","physics","add","sprite","setAlpha","setBounce","setCircle","collider","body","setCollideWorldBounds","setBounds","widthInPixels","heightInPixels","setCollisionByExclusion","input","keyboard","createCursorKeys","player","cameras","main","smoothMoveCameraTowards","target","smoothFactor","undefined","scrollX","scrollY","anims","create","key","frames","frameRate","repeat","on","play","destroy","isBlocked","control","resetBlockMove","controlPlayerBody","velocity","angle","maxXVelocity","startedXVelocity","flyXVelocity","wallJumpXVelocity","wallJumpYVelocity","jumpVelocity","inertia","playerAcceleration","oldVelocityX","isDown","down","none","up","setBlockMove","setVelocityX","Math","max","setVelocityY","min","direction","moveBlockTime","canLeftMove","canRightMove","Dialog","sceneId","extensions","wrapper","tweens","activeDialog","sceneDialogs","game","config","sceneWidth","Number","leftBGFrame","setOrigin","rightBGFrame","setPosition","nextButton","setInteractive","setScrollFactor","skipButton","nextDialog","dialogEnd","nextButtonClick","bind","skipButtonClick","centerBG","tileSprite","container","hideTween","targets","showTween","hide","show","createDialogTriggers","tween","onComplete","once","isActive","tweensPlay","dialogId","dialog","id","createPortrait","createName","createText","showDialog","imgName","firstFrame","list","image","imgFit","make","origin","style","font","color","wordWrap","useAdvancedWrap","portraitWidth","textMargin","actualReplicaNumber","length","valueOfReplica","clearDialog","isSkip","actualReplicaElement","callback","closeDialog","ignoredDialogs","JSON","parse","localStorage","getItem","actualSceneIgnored","push","newActualIgnored","Set","setItem","stringify","hideDialog","debug","createRectangle","properties","find","value","trigger","zone","enable","setAllowGravity","moves","overlap","createConversation","Extensions","img","maxWidth","maxHeight","widthScale","heightScale","scale","setScale","alpha","graphics","fillStyle","fillRect","props","reduce","acm","upLeftX","apply","upLeftY","rectWidth","rectHeight","createGuard","checkedKey","result","arcadeBodyGuard","Level","createButtons","buttonsList","textures","get","getFrameNames","i","getPropsFromObject","button","tileName","createBridge","bridgetId","bridgesList","gameHeight","bridgeSprites","yFromDirection","from","bridge","setTimeout","findCorners","bridgeBody","Phaser","Physics","Arcade","STATIC_BODY","setImmovable","setFriction","DefaultScene","call","tilemap","tileset","addTilesetImage","createLayer","update","Scene","type","CANVAS","parent","backgroundColor","default","arcade","gravity","Game","useState","refBox","setRefBox","useEffect","offsetWidth","className","css","root","ref","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5919713.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__D1GZz\",\"game\":\"style_game__1is8e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__28lIV\"};","export const settingsConfig = {\n  gravity: 500,\n  maxXVelocity: 800,\n  startedXVelocity: 250,\n  flyXVelocity: 2,\n  jumpVelocity: 300,\n  inertia: 100,\n\n  wallJumpXVelocity: 500,\n  wallJumpYVelocity: 400,\n\n  moveBlockTime: 500, //ms\n  playerBounce: 0.2,\n\n  playerAcceleration: (delta: number) => delta / 2,\n\n  dialogWrapperMoveTime: 800,\n\n  portraits: {\n    width: 150,\n    height: 170,\n    y: 10,\n  },\n  dialog: {\n    buttons: {\n      width: 100,\n      height: 100,\n      margin: {\n        top: 10,\n        right: 15,\n      },\n    },\n    colors: {\n      names: \"red\",\n      text: \"white\",\n    },\n\n    triggerDebug: true,\n  },\n\n  bridges: {\n    animation: {\n      ease: \"Quad.easeInOut\",\n      duration: 1000,\n    },\n  },\n};\n","export const storyConfig = {\n  characters: {\n    tal: {\n      NAME: \"TAL\",\n      PORTRAIT: \"tal\",\n    },\n  },\n};\n","import { Scene } from \"phaser\";\nimport { PreloadTypes } from \"./types\";\n\nexport function preloadData(this: Scene, data: PreloadTypes[]) {\n  data.forEach((unit) => {\n    const { method, data } = unit;\n\n    data.forEach((content) => {\n      // @ts-ignore: Unreachable code error\n      const result = this.load[method](...content);\n    });\n  });\n}\n","import { DialogList } from \"../../game/circle/types\";\nimport { storyConfig } from \"../../game/storyConfig\";\n\nconst { tal } = storyConfig.characters;\n\nexport const dialogs: DialogList = [\n  [\n    {\n      portrait: tal.PORTRAIT,\n      name: tal.NAME,\n      replica: \"Dialog #1\",\n    },\n    {\n      portrait: tal.PORTRAIT,\n      name: tal.NAME,\n      replica: \"Dialog #2\",\n    },\n    {\n      portrait: tal.PORTRAIT,\n      name: tal.NAME,\n      replica:\n        \"Dialog #3 (long): ----------- ############# ---------------------------- +++++++++++++++++++++++++++++++++++ $$$$$$$$$$$$$$$$$$$$ #################### ######################## ##########################\",\n    },\n    {\n      portrait: tal.PORTRAIT,\n      name: tal.NAME,\n      replica: \"Dialog #4\",\n    },\n  ],\n];\n","import { PreloadTypes } from \"../../game/circle/types\";\nimport { storyConfig } from \"../../game/storyConfig\";\n\nconst assets = \"assets/\";\n\nconst { tal } = storyConfig.characters;\n\nexport const gameResourcesData: PreloadTypes[] = [\n  {\n    method: \"image\",\n    data: [\n      [\"platforms32x32\", assets + \"platforms/platforms32x32.png\"],\n      [\"playerSprite\", assets + \"player/body.png\"],\n      [\"playerBody\", assets + \"player/ball.png\"],\n\n      [\"dialogCenter\", assets + \"ui/dialog-2.png\"],\n      [\"dialogLeft\", assets + \"ui/dialog-1.png\"],\n      [\"dialogRight\", assets + \"ui/dialog-3.png\"],\n      [\"dialogNextButton\", assets + \"ui/dialog-button-next.png\"],\n      [\"dialogSkipButton\", assets + \"ui/dialog-button-skip.png\"],\n\n      //portraits\n      [tal.PORTRAIT, assets + \"characters/TAL/portrait.png\"],\n    ],\n  },\n\n  {\n    method: \"tilemapTiledJSON\",\n    data: [[\"map\", assets + \"levels/default/level.json\"]],\n  },\n\n  {\n    method: \"atlas\",\n    data: [\n      [\n        \"teleport\",\n        assets + \"effects/teleport.png\",\n        assets + \"effects/teleport_atlas.json\",\n      ],\n      [\n        \"buttons\",\n        assets + \"buttons/buttons.png\",\n        assets + \"buttons/buttons.json\",\n      ],\n      [\n        \"bridges\",\n        assets + \"bridges/bridget.png\",\n        assets + \"bridges/bridget.json\",\n      ],\n    ],\n  },\n];\n","import { PlayerParamsConfig, settingsConfig } from \"../../game\";\nimport DefaultScene from \"../Default\";\n\nexport class Player {\n  cursors!: Phaser.Types.Input.Keyboard.CursorKeys;\n  playerBody!: Phaser.Types.Physics.Arcade.SpriteWithDynamicBody;\n  playerVisual!: Phaser.GameObjects.Sprite;\n  camera!: Phaser.Cameras.Scene2D.Camera;\n  playerParamsConfig: PlayerParamsConfig = {\n    blockMove: {\n      left: {\n        blocked: false,\n        time: 0,\n      },\n      right: {\n        blocked: false,\n        time: 0,\n      },\n    },\n  };\n  coordinates = {\n    x: 0,\n    y: 0,\n  };\n\n  constructor(scene: DefaultScene) {\n    const { world, map } = scene;\n\n    if (map && world) {\n      this.createPlayer(scene, map, world);\n      this.createCamera(scene, map, this.playerBody);\n    }\n    this.createTeleport(scene, this.playerBody);\n  }\n\n  createPlayer(\n    scene: DefaultScene,\n    map: Phaser.Tilemaps.Tilemap,\n    world: Phaser.Tilemaps.TilemapLayer,\n  ) {\n    const { playerBounce } = settingsConfig;\n    const layer = map.getObjectLayer(\"player\");\n    const playerData = layer.objects[0];\n\n    this.playerBody = scene.physics.add\n      .sprite(playerData.x || 0, playerData.y || 0, \"playerSprite\")\n      .setAlpha(0);\n    this.playerVisual = scene.add.sprite(\n      this.playerBody.x,\n      this.playerBody.y,\n      \"playerBody\",\n    );\n    this.playerBody\n      .setBounce(playerBounce)\n      .setCircle(this.playerBody.width / 2);\n    scene.physics.add.collider(this.playerBody, world);\n    this.playerBody.body.setCollideWorldBounds(true);\n    scene.physics.world.setBounds(0, 0, map.widthInPixels, map.heightInPixels);\n    world.setCollisionByExclusion([-1], true);\n\n    this.cursors = scene.input.keyboard.createCursorKeys();\n  }\n\n  createCamera(\n    scene: DefaultScene,\n    map: Phaser.Tilemaps.Tilemap,\n    player: Phaser.Types.Physics.Arcade.SpriteWithDynamicBody,\n  ) {\n    this.camera = scene.cameras.main;\n    this.camera.setBounds(0, 0, map.widthInPixels, map.heightInPixels);\n    this.smoothMoveCameraTowards(player);\n  }\n\n  smoothMoveCameraTowards(\n    target: Phaser.Types.Physics.Arcade.SpriteWithDynamicBody | null,\n    smoothFactor?: number,\n  ) {\n    if (this.camera && target) {\n      if (smoothFactor === undefined) {\n        smoothFactor = 0;\n      }\n      this.camera.scrollX =\n        smoothFactor * this.camera.scrollX +\n        (1 - smoothFactor) * (target.x - this.camera.width * 0.5);\n      this.camera.scrollY =\n        smoothFactor * this.camera.scrollY +\n        (1 - smoothFactor) * (target.y - this.camera.height * 0.5);\n    }\n  }\n\n  createTeleport(\n    scene: DefaultScene,\n    player: Phaser.Types.Physics.Arcade.SpriteWithDynamicBody,\n  ) {\n    scene.anims.create({\n      key: \"teleportAnimation\",\n      frames: \"teleport\",\n      frameRate: 20,\n      repeat: 0,\n    });\n    scene.input.keyboard.on(\"keydown-ENTER\", () => {\n      this.coordinates = {\n        x: player.x || 0,\n        y: player.y || 0,\n      };\n    });\n\n    scene.input.keyboard.on(\"keydown-SPACE\", () => {\n      const { x, y } = this.coordinates;\n      if (player) {\n        player.x = x;\n        player.y = y;\n      }\n\n      const sprite = scene.add\n        .sprite(x, y, \"teleport\")\n        .play(\"teleportAnimation\")\n        .on(\"complete\", () => {\n          sprite.destroy();\n        });\n    });\n  }\n\n  update(time: number, delta: number, isBlocked?: boolean) {\n    this.control(delta, time, isBlocked);\n    this.resetBlockMove(time);\n    this.controlPlayerBody(delta);\n    this.smoothMoveCameraTowards(this.playerBody, 0.9);\n  }\n\n  controlPlayerBody(delta: number) {\n    this.playerVisual.x = this.playerBody.x;\n    this.playerVisual.y = this.playerBody.y;\n\n    if (this.playerBody.body.velocity.x) {\n      this.playerVisual.angle +=\n        delta * 0.003 * this.playerBody.body.velocity.x;\n    }\n  }\n\n  control(delta: number, time: number, isBlocked?: boolean) {\n    const {\n      maxXVelocity,\n      startedXVelocity,\n      flyXVelocity,\n      wallJumpXVelocity,\n      wallJumpYVelocity,\n      jumpVelocity,\n      inertia,\n      playerAcceleration,\n    } = settingsConfig;\n\n    const { velocity } = this.playerBody.body;\n    const oldVelocityX = velocity.x;\n\n    ///---- Left\n    if (\n      this.cursors.left.isDown &&\n      !this.playerParamsConfig.blockMove.left.blocked &&\n      !isBlocked\n    ) {\n      if (!this.playerBody.body.blocked.none) {\n        if (oldVelocityX === 0) {\n          velocity.x = -startedXVelocity;\n        } else if (oldVelocityX > 0) {\n          velocity.x = oldVelocityX * -1;\n        } else if (velocity.x > maxXVelocity * -1) {\n          velocity.x -= playerAcceleration(delta);\n        } else if (velocity.x >= maxXVelocity * -1) {\n          velocity.x = maxXVelocity * -1;\n        }\n      } else {\n        velocity.x -= flyXVelocity;\n      }\n\n      ///---- Right\n    } else if (\n      this.cursors.right.isDown &&\n      !this.playerParamsConfig.blockMove.right.blocked &&\n      !isBlocked\n    ) {\n      if (!this.playerBody.body.blocked.none) {\n        if (oldVelocityX === 0) {\n          velocity.x = startedXVelocity;\n        } else if (oldVelocityX < 0) {\n          velocity.x = oldVelocityX * -1;\n        } else if (velocity.x < maxXVelocity) {\n          velocity.x += playerAcceleration(delta);\n        } else if (velocity.x >= maxXVelocity) {\n          velocity.x = maxXVelocity;\n        }\n      } else {\n        velocity.x += flyXVelocity;\n      }\n      ///---- None\n    } else {\n      if (this.playerBody.body.blocked.down) {\n        if (velocity.x > inertia) {\n          velocity.x -= delta * 2;\n        } else if (velocity.x < -inertia) {\n          velocity.x += delta * 2;\n        } else {\n          velocity.x = 0;\n        }\n      }\n    }\n\n    ///---- Up\n    if (this.cursors.up.isDown && !isBlocked) {\n      if (this.playerBody.body.blocked.left) {\n        this.setBlockMove(\"left\", time);\n        this.playerBody.setVelocityX(Math.max(wallJumpXVelocity, oldVelocityX));\n        this.playerBody.setVelocityY(-wallJumpYVelocity);\n      } else if (this.playerBody.body.blocked.right) {\n        this.setBlockMove(\"right\", time);\n        this.playerBody.setVelocityX(\n          Math.min(-wallJumpXVelocity, oldVelocityX),\n        );\n        this.playerBody.setVelocityY(-wallJumpYVelocity);\n      } else if (this.playerBody.body.blocked.down) {\n        this.playerBody.setVelocityY(-jumpVelocity);\n      }\n    }\n  }\n  setBlockMove(direction: keyof PlayerParamsConfig[\"blockMove\"], time: number) {\n    const { blockMove } = this.playerParamsConfig;\n    blockMove[direction].blocked = true;\n    blockMove[direction].time = time;\n  }\n\n  resetBlockMove(time: number) {\n    const { moveBlockTime } = settingsConfig; //ms\n    const { left, right } = this.playerParamsConfig.blockMove;\n\n    const canLeftMove = time - left.time > moveBlockTime;\n\n    const canRightMove = time - right.time > moveBlockTime;\n\n    if (canLeftMove) {\n      left.blocked = false;\n    }\n\n    if (canRightMove) {\n      right.blocked = false;\n    }\n  }\n}\n","import { Extensions } from \".\";\nimport { ActiveDialog, DialogList, DialogProperties, IgnoredDialogs, settingsConfig, Tweens } from \"../../game\";\nimport DefaultScene from \"../Default\";\n\n\nexport class Dialog {\n  scene: DefaultScene;\n  extensions: Extensions;\n\n  wrapper: Phaser.GameObjects.Container;\n  tweens: Tweens;\n\n  activeDialog: ActiveDialog | null = null;\n  sceneDialogs: DialogList;\n  sceneId: number;\n\n  constructor(scene: DefaultScene, dialogs: DialogList, sceneId: number) {\n    this.sceneId = sceneId;\n    this.sceneDialogs = dialogs;\n    this.scene = scene;\n    this.extensions = scene.extensions;\n\n    const { width, height } = scene.game.config;\n    const sceneWidth = Number(width);\n\n    const leftBGFrame = scene.add.sprite(0, 0, \"dialogLeft\").setOrigin(0, 0);\n    const rightBGFrame = scene.add\n      .sprite(sceneWidth, 0, \"dialogRight\")\n      .setOrigin(0, 0);\n    rightBGFrame.setPosition(\n      rightBGFrame.x - rightBGFrame.width,\n      rightBGFrame.y\n    );\n    const { buttons } = settingsConfig.dialog;\n\n    const nextButton = scene.add\n      .sprite(\n        sceneWidth - buttons.margin.right,\n        buttons.margin.top,\n        \"dialogNextButton\"\n      )\n      .setInteractive()\n      .setScrollFactor(0)\n      .setOrigin(1, 0);\n    const skipButton = scene.add\n      .sprite(\n        sceneWidth - buttons.margin.right,\n        buttons.margin.top * 2 + buttons.height,\n        \"dialogSkipButton\"\n      )\n      .setInteractive()\n      .setScrollFactor(0)\n      .setOrigin(1, 0);\n    // this.extensions.imgFit(nextButton, buttons.width, buttons.height); //fit img to config size\n    // this.extensions.imgFit(skipButton, buttons.width, buttons.height); //fit img to config size\n\n    const { nextDialog, dialogEnd } = this;\n    const nextButtonClick = nextDialog.bind(this);\n    const skipButtonClick = dialogEnd.bind(this, true);\n    nextButton.on(\"pointerup\", nextButtonClick);\n    skipButton.on(\"pointerup\", skipButtonClick);\n\n    const centerBG = scene.add\n      .tileSprite(\n        leftBGFrame.width,\n        0,\n        sceneWidth - leftBGFrame.width - rightBGFrame.width,\n        rightBGFrame.height,\n        \"dialogCenter\"\n      )\n      .setOrigin(0, 0);\n\n    this.wrapper = scene.add\n      .container(0, 0)\n      .add([leftBGFrame, rightBGFrame, centerBG, nextButton, skipButton])\n      .setScrollFactor(0)\n      .setPosition(0, -centerBG.height);\n\n    const hideTween = scene.tweens.create({\n      targets: this.wrapper,\n\n      y: -centerBG.height,\n      ease: \"Quad.easeInOut\",\n      repeat: 0,\n      duration: settingsConfig.dialogWrapperMoveTime,\n    });\n\n    const showTween = scene.tweens.create({\n      targets: this.wrapper,\n      y: 0,\n      ease: \"Quad.easeInOut\",\n      repeat: 0,\n      duration: settingsConfig.dialogWrapperMoveTime,\n    });\n\n    this.tweens = {\n      hide: hideTween,\n      show: showTween,\n    };\n\n    this.createDialogTriggers(scene.map);\n  }\n\n  tweensPlay(tween: Phaser.Tweens.Tween, onComplete?: () => void) {\n    if (onComplete) {\n      tween.once(\"complete\", () => {\n        onComplete && onComplete();\n      });\n    }\n    tween.play();\n  }\n\n  showDialog(onComplete?: () => void) {\n    if (this.activeDialog) {\n      this.activeDialog.isActive = true;\n    }\n\n    this.tweensPlay(this.tweens.show, onComplete);\n  }\n\n  hideDialog(onComplete?: () => void) {\n    if (this.activeDialog) {\n      this.activeDialog.isActive = false;\n    }\n    this.tweensPlay(this.tweens.hide, onComplete);\n  }\n\n  createConversation(dialogId: number) {\n    const activeDialog = this.sceneDialogs[dialogId];\n    if (activeDialog) {\n      this.activeDialog = {\n        dialog: activeDialog,\n        replica: 0,\n        id: dialogId,\n        objects: {},\n      };\n\n      const { name, portrait, replica } = activeDialog[0];\n      this.createPortrait(portrait);\n      this.createName(name);\n      this.createText(replica);\n\n      this.showDialog();\n    }\n  }\n\n  createPortrait(imgName: string) {\n    const { height, width, y } = settingsConfig.portraits;\n    const firstFrame = this.wrapper.list[0];\n    const portrait = this.scene.add\n      //@ts-ignore\n      .image(firstFrame.width || 25, y, imgName)\n      .setOrigin(0);\n\n    this.extensions.imgFit(portrait, width, height);\n\n    this.wrapper.add(portrait);\n\n    if (this.activeDialog) {\n      this.activeDialog.objects.portrait = portrait;\n    }\n  }\n\n  createName(name: string) {\n    const { height, width } = settingsConfig.portraits;\n\n    const text = this.scene.make.text({\n      x: 0,\n      y: 0,\n      text: name,\n      origin: { x: 0.5, y: 0 },\n      style: {\n        font: \"25px Arial\",\n        color: settingsConfig.dialog.colors.names,\n        wordWrap: {\n          width: width,\n          useAdvancedWrap: true,\n        },\n      },\n    });\n\n    text.x = 25 + width / 2;\n    text.y = height + 30;\n\n    this.wrapper.add(text);\n\n    if (this.activeDialog) {\n      this.activeDialog.objects.name = text;\n    }\n  }\n\n  createText(replica: string) {\n    const { y, width: portraitWidth } = settingsConfig.portraits;\n    const { buttons, colors } = settingsConfig.dialog;\n    const textMargin = 50;\n    const text = this.scene.make.text({\n      x: portraitWidth + textMargin,\n      y: y * 2,\n      text: replica,\n      origin: { x: 0, y: 0 },\n      style: {\n        font: \"bold 25px Arial\",\n        color: colors.text,\n        wordWrap: {\n          width:\n            Number(this.scene.game.config.width) -\n            textMargin * 2 -\n            portraitWidth -\n            buttons.width,\n          useAdvancedWrap: true,\n        },\n      },\n    });\n\n    this.wrapper.add(text);\n\n    if (this.activeDialog) {\n      this.activeDialog.objects.text = text;\n    }\n  }\n\n  clearDialog() {\n    if (this.activeDialog) {\n      const { objects } = this.activeDialog;\n\n      objects.name?.destroy();\n      objects.portrait?.destroy();\n      objects.text?.destroy();\n    }\n  }\n\n  nextDialog() {\n    if (this.activeDialog) {\n      const { dialog, replica } = this.activeDialog;\n      const actualReplicaNumber = replica + 1;\n\n      if (actualReplicaNumber < dialog.length) {\n        const {\n          name,\n          portrait,\n          replica: valueOfReplica,\n        } = dialog[actualReplicaNumber];\n        this.clearDialog();\n\n        this.createPortrait(portrait);\n        this.createName(name);\n        this.createText(valueOfReplica);\n\n        this.activeDialog.replica = actualReplicaNumber;\n      } else {\n        this.dialogEnd();\n      }\n    }\n  }\n\n  dialogEnd(isSkip?: boolean) {\n    if (this.activeDialog) {\n      const { dialog, replica, id: dialogId } = this.activeDialog;\n      const actualReplicaElement = dialog[replica] || dialog[dialog.length - 1];\n      actualReplicaElement.callback && actualReplicaElement.callback();\n      this.closeDialog();\n\n      if (isSkip && (dialogId || dialogId === 0)) {\n        const ignoredDialogs: IgnoredDialogs = JSON.parse(\n          localStorage.getItem(\"ignoredDialogs\") || \"[]\"\n        );\n        const actualSceneIgnored = ignoredDialogs[this.sceneId] || [];\n        actualSceneIgnored.push(dialogId);\n\n        const newActualIgnored = [...new Set(actualSceneIgnored)];\n        ignoredDialogs[this.sceneId] = newActualIgnored;\n\n        localStorage.setItem(\"ignoredDialogs\", JSON.stringify(ignoredDialogs));\n      }\n    }\n  }\n\n  closeDialog() {\n    const { clearDialog } = this;\n    this.hideDialog(clearDialog.bind(this));\n  }\n\n  createTrigger(x: number, y: number, width: number, height: number) {\n    const debug = settingsConfig.dialog.triggerDebug;\n    return this.scene.extensions.createRectangle(\n      x,\n      y,\n      width,\n      height,\n      0x00ff00,\n      debug ? 0.3 : 0\n    );\n  }\n\n  createDialogTriggers(map: Phaser.Tilemaps.Tilemap | null) {\n    if (map) {\n      const layer = map.getObjectLayer(\"dialogs\");\n      const triggerObjects = layer.objects;\n\n      triggerObjects.forEach(\n        ({ x = -100, y = -100, width = 32, height = 32, properties }) => {\n          const props: DialogProperties[] = properties;\n          const dialogId = Number(\n            props.find((value) => value.name === \"id\")?.value\n          );\n\n          const trigger = this.scene.add.zone(x, y, width, height).setOrigin(0);\n          this.scene.physics.world.enable(trigger);\n          //@ts-ignore\n          trigger.body.setAllowGravity(false);\n\n          //@ts-ignore\n          trigger.body.moves = false;\n\n          const { player } = this.scene;\n          if (player?.playerBody) {\n            this.scene.physics.add.overlap(player.playerBody, trigger, () => {\n              this.createConversation(dialogId);\n              trigger.destroy();\n            });\n          }\n        }\n      );\n    }\n  }\n}\n","import { Scene } from \"phaser\";\nimport {\n  ObjectWithCorners,\n  TiledObjectProperties,\n  UnpackedTiledObjectProperties,\n} from \"../../game\";\n\nexport class Extensions {\n  scene: Scene;\n\n  constructor(scene: Scene) {\n    this.scene = scene;\n  }\n\n  imgFit(img: Phaser.GameObjects.Image, maxWidth: number, maxHeight: number) {\n    const widthScale = maxWidth / img.width;\n    const heightScale = maxHeight / img.height;\n\n    const scale = Math.min(widthScale, heightScale, 1);\n\n    img.setScale(scale);\n  }\n\n  createRectangle(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    color: number,\n    alpha: number,\n  ) {\n    return this.scene.add\n      .graphics()\n      .fillStyle(color, alpha)\n      .fillRect(x, y, width, height);\n  }\n\n  getPropsFromObject(props: TiledObjectProperties[]) {\n    return props.reduce<UnpackedTiledObjectProperties>(\n      (acm, { name, value }) => {\n        return {\n          ...acm,\n          [name]: value,\n        };\n      },\n      {},\n    );\n  }\n\n  findCorners(list: ObjectWithCorners[]) {\n    const upLeftX = Math.min.apply(\n      null,\n      list.reduce((acm: number[], { x }) => {\n        acm.push(x);\n        return acm;\n      }, []),\n    );\n    const upLeftY = Math.min.apply(\n      null,\n      list.reduce((acm: number[], { y }) => {\n        acm.push(y);\n        return acm;\n      }, []),\n    );\n\n    const upRightX = Math.max.apply(\n      null,\n      list.reduce((acm: number[], { x, width }) => {\n        acm.push(x + width);\n        return acm;\n      }, []),\n    );\n    const upRightY = Math.max.apply(\n      null,\n      list.reduce((acm: number[], { y, height }) => {\n        acm.push(y + height);\n        return acm;\n      }, []),\n    );\n\n    const rectWidth = upRightX - upLeftX;\n    const rectHeight = upRightY - upLeftY;\n\n    return {\n      upLeftX,\n      upLeftY,\n      rectWidth,\n      rectHeight,\n    };\n  }\n}\n","export function createGuard<Type>(checkedKey: string) {\n  return function (value: Type | any): value is Type {\n    if (!value) {\n      return false;\n    }\n\n    //@ts-ignore\n    const result = (value as Type)[checkedKey];\n\n    return !!result || result === 0;\n  };\n}\n\nexport default createGuard;\n","import { createGuard } from \"utils\";\nimport {\n  BridgetProps,\n  ButtonsProps,\n  ObjectWithCorners,\n  settingsConfig,\n} from \"game/modules/game\";\nimport DefaultScene from \"../Default\";\n\nconst arcadeBodyGuard = createGuard<Phaser.Physics.Arcade.Body>(\"setVelocity\");\nconst { duration, ease } = settingsConfig.bridges.animation;\n\nexport class Level {\n  scene: DefaultScene;\n  constructor(scene: DefaultScene) {\n    this.scene = scene;\n\n    const map = scene.map;\n    const player = scene.player?.playerBody;\n\n    if (map && player) {\n      this.createButtons(scene, map, player);\n    }\n  }\n\n  createButtons(\n    scene: DefaultScene,\n    map: Phaser.Tilemaps.Tilemap,\n    player: Phaser.Types.Physics.Arcade.SpriteWithDynamicBody,\n  ) {\n    const layer = map.getObjectLayer(\"buttons\");\n    const buttonsList = layer.objects;\n\n    const textures = scene.textures.get(\"buttons\").getFrameNames();\n\n    buttonsList.forEach(\n      ({ x = -100, y = -100, width = -100, height = -100, properties }, i) => {\n        const props: ButtonsProps =\n          scene.extensions.getPropsFromObject(properties);\n\n        const button = scene.add\n          .tileSprite(\n            x,\n            y,\n            width,\n            height,\n            \"buttons\",\n            props.tileName || textures[0],\n          )\n          .setOrigin(0, 1);\n        scene.physics.world.enable(button);\n\n        if (arcadeBodyGuard(button.body)) {\n          button.body.setAllowGravity(false);\n          // button.body.setVelocity(50, 0);\n        }\n\n        scene.physics.add.overlap(player, button, () => {\n          button.destroy();\n          this.createBridge(scene, map, player, props.bridgetId);\n        });\n      },\n    );\n  }\n\n  createBridge(\n    scene: DefaultScene,\n    map: Phaser.Tilemaps.Tilemap,\n    player: Phaser.Types.Physics.Arcade.SpriteWithDynamicBody,\n    id?: string | number,\n  ) {\n    if (!id) {\n      return;\n    }\n    const layer = map.getObjectLayer(\"bridges\");\n    const bridgesList = layer.objects;\n    const textures = scene.textures.get(\"bridges\").getFrameNames();\n\n    const { height } = scene.game.config;\n    const gameHeight = Number(height);\n\n    const bridgeSprites: ObjectWithCorners[] = [];\n\n    bridgesList.forEach(\n      ({ x = -100, y = -100, width = 0, height = 0, properties }, i) => {\n        const props: BridgetProps =\n          scene.extensions.getPropsFromObject(properties);\n\n        if (props.bridgetId === id) {\n          const yFromDirection =\n            props.from === \"bottom\" ? -height * 2 : gameHeight + height * 2;\n\n          const bridge = scene.add\n            .tileSprite(\n              x,\n              yFromDirection,\n              width,\n              height,\n              \"bridges\",\n              props.tileName || textures[0],\n            )\n            .setOrigin(0, 1);\n\n          bridgeSprites.push({ ...bridge, y });\n\n          const bridgeAnimation = scene.tweens.add({\n            targets: bridge,\n            y,\n            ease,\n            duration,\n            repeat: 0,\n          });\n        }\n      },\n    );\n\n    setTimeout(() => {\n      const { upLeftX, upLeftY, rectWidth, rectHeight } =\n        scene.extensions.findCorners(bridgeSprites);\n      const bridgeBody = scene.add\n        .zone(upLeftX, upLeftY, rectWidth, rectHeight)\n        .setOrigin(0, 1);\n      this.scene.physics.world.enable(\n        bridgeBody,\n        Phaser.Physics.Arcade.STATIC_BODY,\n      );\n\n      if (arcadeBodyGuard(bridgeBody.body)) {\n        bridgeBody.body.setAllowGravity(false).setImmovable().setFriction(0, 0);\n        bridgeBody.body.moves = false;\n      }\n\n      scene.physics.add.collider(player, bridgeBody, () => {});\n    }, duration);\n  }\n}\n","import { Scene } from \"phaser\";\nimport { preloadData } from \"../game\";\nimport { dialogs, gameResourcesData } from \"./assets\";\n\n\n\nimport { Dialog, Extensions, Level, Player } from \"./modules\";\n\nexport default class DefaultScene extends Scene {\n  player: Player | null = null;\n  extensions!: Extensions;\n  dialog: Dialog | null = null;\n  map: Phaser.Tilemaps.Tilemap | null = null;\n  world: Phaser.Tilemaps.TilemapLayer | null = null;\n\n  preload() {\n    this.extensions = new Extensions(this);\n    preloadData.call(this, gameResourcesData);\n  }\n  create() {\n    this.map = this.make.tilemap({ key: \"map\" });\n    const tileset = this.map.addTilesetImage(\n      \"platforms32x32\",\n      \"platforms32x32\",\n    );\n    this.world = this.map.createLayer(0, tileset, 0, 0);\n\n    this.player = new Player(this);\n    this.dialog = new Dialog(this, dialogs, 0);\n    const level = new Level(this);\n  }\n\n  update(time: number, delta: number) {\n    this.player?.update(time, delta, this.dialog?.activeDialog?.isActive);\n  }\n}\n","import { settingsConfig } from \"../game/settingsConfig\";\nimport DefaultScene from \"../scenes/Default\";\n\nexport const config: Phaser.Types.Core.GameConfig = {\n  type: Phaser.CANVAS,\n  parent: \"game-box\",\n  height: 720,\n  width: 1280,\n  scene: [DefaultScene],\n  backgroundColor: 0x14003b,\n  physics: {\n    default: \"arcade\",\n    arcade: {\n      gravity: { y: settingsConfig.gravity },\n    },\n  },\n};\n","import { useEffect, useLayoutEffect, useState } from \"react\";\n\nimport { renderGame } from \"./instance\";\nimport css from \"./style.module.css\";\n\nlet game: Phaser.Game | null = null;\n\nexport const Game = () => {\n  const [refBox, setRefBox] = useState<HTMLDivElement | null>(null);\n\n  // useLayoutEffect(() => {\n  //   if (refBox) {\n  //     game = renderGame(refBox.offsetWidth);\n  //   }\n  // }, [refBox]);\n\n  useEffect(() => {\n    if (refBox) {\n      setTimeout(() => {\n        game = renderGame(refBox.offsetWidth);\n      }, 0);\n    }\n\n    return () => {\n      game?.destroy(true, false);\n    };\n  });\n\n  return (\n    <div className={css.root}>\n      <div\n        className={css.game}\n        id=\"game-box\"\n        ref={(ref) => {\n          setRefBox(ref);\n        }}\n      />\n    </div>\n  );\n};\n","import Phaser from \"phaser\";\nimport { config } from \"./modules/service/config\";\n\nexport const renderGame = (w: number) => {\n  return new Phaser.Game(config);\n};\n","import css from \"./style.module.css\";\n\nimport { Game } from \"../../game\";\n\nfunction App() {\n  return (\n    <div className={css.root}>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./containers\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}